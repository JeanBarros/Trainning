var agendamentoConflitante = false;

$( window ).load(function() { 
	
	//RemoverItensDuplicados ();
	//LimparDropDownProfissionais();	 
	
	var profissionalSelecionado = $(".listaProfissionais option:selected").text();
	    
	$(".listaFuncoes select").change(function(){
		//CarregarAbasProfissionais();         
		
    }); 
    
	$(".dataInicioAgendamento .ms-dttimeinput select").change(function(){
		VerificarAgendamentos()        
		
    });
    
	$(".dataFinalAgendamento .ms-dttimeinput select").change(function(){
		VerificarAgendamentos()        
		
    });  
});

ExecuteOrDelayUntilScriptLoaded(function() {  
        
     VerificarAgendamentos()     
     CarregarAbasProfissionais();    
           
}, "SP.js");

// Manipula as informações sobre as funções disponíveis
// Os dados são recuperados da lista "Profissionais BemEstar" através da CamlQuery
function CarregarAbasProfissionais() {	

	var ctx = new SP.ClientContext.get_current();
	var web = ctx.get_web();
	var lists = web.get_lists();
	ctx.load(lists);
	var list = lists.getByTitle("Profissionais BemEstar");
	var camlQuery = new SP.CamlQuery();
	//camlQuery.set_viewXml("<View><Query><Where><Eq><FieldRef Name='ID' /><Value Type='Counter'>" + idProfissional + "</Value></Eq></Where></Query></View>");	
	camlQuery.set_viewXml("<View></View>");

	itemCollection = list.getItems(camlQuery);
	ctx.load(itemCollection);

	ctx.executeQueryAsync(Function.createDelegate(this,this.onSuccess),Function.createDelegate(this,this.onFailed));
}

function onSuccess(sender, args) {  
	                                
var contNome = 0;
    
if (itemCollection.get_count() > 0) {

		var funcaoDoProfissional = [];
		var contFuncao = 0;
		
		var idDoProfissional = [];
		var contID = 0;
		
		var nomeDoProfissional = [];
		
		
		var arrFuncoes = [];
		
		var funcaoSelecionada = $(".listaFuncoes option:selected").text();
		
		var enumerator = itemCollection.getEnumerator();
		
        while (enumerator.moveNext()) {
            currentListItems = enumerator.get_current();
            
            funcaoDoProfissional[contFuncao] = currentListItems.get_item("Fun_x00e7__x00e3_o");	
			contFuncao += 1;
			
			idDoProfissional[contID] = currentListItems.get_item("ID");	
			contID += 1;		
            
            contNome += 1;
						
			$('#tabs ul').append('<li><a href="#tabs-' + contNome + '">' + currentListItems.get_item("Title") + '</a></li>');	
			
			/*$('#conteudoAba').append('<div id="tabs-' + contNome + '">' + 
			'<img src=' + currentListItems.get_item("Foto").$1_1 + '>' + 
			currentListItems.get_item("Fun_x00e7__x00e3_o") + '<br/>' +
			currentListItems.get_item("Dias_x0020_de_x0020_atua_x00e7__") +'</div>')*/
			
			$('#conteudoAba').append('<div id="tabs-' + contNome + '">' + '<table style="width: 700px" cellspacing="0" cellpadding="5" border="0">'
			+'<tr><td style="width:180px"><img src=' + currentListItems.get_item("Foto").$1_1 + '>' + '</td>'
			+'<td style="font-weight:bold">' + currentListItems.get_item("Fun_x00e7__x00e3_o") + '</td></tr>'
			+'<tr><td style="border-bottom: solid 1px #9bcde6">Serviços</td>'
			+'<td style="background-color:#9bcde6; border-bottom: solid 1px #ffffff">' + currentListItems.get_item("Servi_x00e7_os") + '</td></tr>'
			+'<tr><td style="border-bottom: solid 1px #9bcde6">Dia de atendimento</td>'
			+'<td style="background-color:#9bcde6; border-bottom: solid 1px #ffffff">' + currentListItems.get_item("Dias_x0020_de_x0020_atua_x00e7__") + '</td></tr>'
			+'<tr><td style="border-bottom: solid 1px #9bcde6">Horário de atendimento</td>'
			+'<td style="background-color:#9bcde6; border-bottom: solid 1px #ffffff">' + currentListItems.get_item("Hora_x0020_inicial_x0020_atendim") + '</td></tr>' 
			+'<tr><td style="border-bottom: solid 1px #9bcde6">Duração do serviço</td>'
			+'<td style="background-color:#9bcde6">' + currentListItems.get_item("Dura_x00e7__x00e3_o_x0020_do_x00") + '</td></tr>'
			+'<tr><td colspan="2" style="border: solid 1px #9bcde6; padding-top:10px">' + currentListItems.get_item("Descri_x00e7__x00e3_o") + '</td></tr></table></div>');

            //$(".detalhesDoProfissional").empty();
            
            //$(".detalhesDoProfissional li").append(currentListItems.get_item("Title"));
            
	        /*$(".detalhesDoProfissional").append('<li>' + currentListItems.get_item("Title") 
	        + '&nbsp; &nbsp;' + currentListItems.get_item("ID") 
	        + '<img src=' + currentListItems.get_item("Foto").$1_1 + '></li>');	*/						        					
        }
        
        $( function() {
			    $( "#tabs" ).tabs();
			  } );
        
        // Adiciona no array o nome da função retornada da lista de profissionais através da CamlQuery
        // Mais de um profissional pode executar a mesma função
        for (i = 0; i < funcaoDoProfissional.length; i++) {
    		
    		arrFuncoes[i] = funcaoDoProfissional[i];
    		//$(".detalhesDoProfissional").append('<li>' + funcaoDoProfissional[i] + '</li>');     					  		
		}
		
		// Remove os itens que não sejam iguais a função selecionada no dropDown de funções	   
	   	var totalFuncoes = arrFuncoes.length;
	   
	    for (i = 0; i < totalFuncoes; i++){
		   for (j = 0; j < arrFuncoes.length; j++) {
	    		
	    		if (arrFuncoes[j] != funcaoSelecionada)
	    			arrFuncoes.splice(j, 1);
			}
			
			if (arrFuncoes.length == 1)
	    		break;
		 }		
		
		// Compara a função selecionada com as funções da lista de profissionais
	   	// então retorna o nome dos profissionais coincidentes
	   	for (i = 0; i < funcaoDoProfissional.length; i++) {
    		if (funcaoSelecionada == funcaoDoProfissional[i]){
    		
    			var profissional = nomeDoProfissional[i];
				
				//$('#ui-id-1').html(profissional)
    			//$(".listaProfissionais select").append('<option value="' + (i + 1) + '">' + profissional + '</option>');	
    						
    		}
    	}	      
	}                    
} // Final
	    
function onFailed(sender, args) {
        console.log("Algo deu errado");
}

// Remove valores duplicados do dropdown de funções
function RemoverItensDuplicados () {
	
    var usedNames = {};
	$(".listaFuncoes option").each(function () {
	    if(usedNames[this.text]) {
	        $(this).remove();
	    } 
	    else {
	        usedNames[this.text] = this.value;
	    }
	});
}

// Remove todos os itens do dropDown que será populado dinamicamente 
//com os profissionais relacionados a função escolhida
function LimparDropDownProfissionais () {
	$(".listaProfissionais option").remove(); 
	$(".listaProfissionais select").prepend('<option value="0"> (Nenhum) </option>');
}

function VerificarAgendamentos() {

	var ctx1 = new SP.ClientContext.get_current();
	var web1 = ctx1.get_web();
	var lists1 = web1.get_lists();
	ctx1.load(lists1);
	var list1 = lists1.getByTitle("AgendaSalaBemEstar");
	var camlQuery1 = new SP.CamlQuery();
	camlQuery1.set_viewXml("<View></View>");	

	itemCollection1 = list1.getItems(camlQuery1);
	ctx1.load(itemCollection1);

	ctx1.executeQueryAsync(Function.createDelegate(this, this.onSuccess1),Function.createDelegate(this,this.onFailed));
} 
	
function onSuccess1(sender, args) {  
                                    
 if (itemCollection1.get_count() > 0) {
        var enumerator1 = itemCollection1.getEnumerator();
        while (enumerator1.moveNext()) {
            
            currentListItems1 = enumerator1.get_current();
                            
            // Armazena o horário inicial do agendamento já cadastrado na lista
			// Remove os "segundos (00:00)" da data retornada e aplica o padrão (HH:MM)
            var horaInicio = currentListItems1.get_item("EventDate").toLocaleTimeString(navigator.language, {hour: '2-digit', minute:'2-digit'});;
            
            // Armazena o horário final já cadastrado na lista
			// Remove os "segundos (00:00)" da data retornada e aplica o padrão (HH:MM)
            var horaFim = currentListItems1.get_item("EndDate").toLocaleTimeString(navigator.language, {hour: '2-digit', minute:'2-digit'});
            
            // Verifica se a data de início e fim selecionadas coincidem com algum agendamento já existente na lista 
            if ($('.dataInicioAgendamento input').val() == currentListItems1.get_item("EventDate").toLocaleDateString() &&
            	$('.dataFinalAgendamento input').val() == currentListItems1.get_item("EndDate").toLocaleDateString()){
            	
            	// Armazena na variável o horário de início selecionado no formulário
            	// uma variável para o dropDown de horas e outra para os minutos.
            	var horaInicioSelecionadaDrpDown = $('.dataInicioAgendamento .ms-dttimeinput select').val();
				var horaInicioSelecionadaDrpDown1 = $('.dataInicioAgendamento .ms-dttimeinput select').eq(1).val();
									
				var horaInicioSelecionada =  horaInicioSelecionadaDrpDown + horaInicioSelecionadaDrpDown1;
				
				// Armazena na variável o horário de término selecionado no formulário
            	// uma variável para o dropDown de horas e outra para os minutos.
            	var horaTerminoSelecionadaDrpDown = $('.dataFinalAgendamento .ms-dttimeinput select').val();
				var horaTerminoSelecionadaDrpDown1 = $('.dataFinalAgendamento .ms-dttimeinput select').eq(1).val();
									
				var horaTerminoSelecionada =  horaTerminoSelecionadaDrpDown + horaTerminoSelecionadaDrpDown1;
				
				// Verifica se para a data selecionada os horários de início e fim coincidem com algum já agendado            	
            	if (horaInicioSelecionada == horaInicio){
            		agendamentoConflitante = true;            			
            		return;
            	}            		
            	else if (horaInicioSelecionada <= horaInicio && horaTerminoSelecionada >= horaInicio){
            		agendamentoConflitante = true;            		
            		return;
            	}
            	else if (horaInicioSelecionada >= horaInicio && horaInicioSelecionada < horaFim){
            		agendamentoConflitante = true;
            		return;
            	}
            	else
            		agendamentoConflitante = false;
            }
        }
    }	                               
}

//PreSaveAction code to validate
function PreSaveAction(itemDuplicado)
{
   if (agendamentoConflitante){
   		alert('Já existe uma reserva para o período selecionado.');   		
   		return false;
   }
   else
   		return true;    
}



$(".listaProfissionais option").each(function() {
		if( $(this).attr('value') == 1 ) { $(this).attr('selected','selected'); }
	});
